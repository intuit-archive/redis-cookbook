#/bin/sh
#Configurations injected by install_server below....
# REDHAT chkconfig header
# chkconfig: - 58 74
# description: redis is the redis daemon.
### BEGIN INIT INFO
# Provides: redis
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Should-Start: $syslog $named
# Should-Stop: $syslog $named
# Short-Description: start and stop redis
# Description: Redis daemon
### END INIT INFO
EXEC=<%= @redis_path %>/redis-server
CLIEXEC=<%= @redis_path %>/redis-cli
PIDFILE=<%= @redis_pidfile %>
CONF="<%= @redis_conf %>"
USER="<%= @redis_user %>"
REDISPORT="<%= @redis_port %>"
###############


# Source function library.
. /etc/init.d/functions

start () 
{
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                echo "Starting Redis server..."
                daemon --user="$USER" $EXEC $CONF
                RETVAL=$?
                [ $RETVAL -eq 0 ] && touch /var/lock/subsys/redis
                echo
                exit $RETVAL
        fi
}

stop() 
{
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $CLIEXEC -p $REDISPORT shutdown
                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                rm /var/lock/subsys/redis
                echo "Redis stopped"
        fi
} 

restart() 
{
        stop
        start
}

status()
{
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
                exit 1
        else
                PID=$(cat $PIDFILE)
                echo "REDIS is running: PID = $PID"
                exit 0
        fi
}

case "$1" in
        start)
            start
            ;;
        stop)
            stop
            ;;
        restart)
            restart
            ;;
        status)
            status
            ;;
        *)
            echo "Please use start, stop, or restart as first argument"
            exit 1
            ;;
esac
